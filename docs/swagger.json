{
  "openapi": "3.0.0",
  "info": {
    "title": "Data Space Connector",
    "version": "0.1.0",
    "description": "PTX Data Space connector"
  },
  "paths": {
    "/private/catalogs/": {
      "get": {
        "summary": "Get Data space Connector catalog",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "Create a resource",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "resource id of the resource",
                    "type": "string"
                  },
                  "endpoint": {
                    "description": "endpoint of the resource",
                    "type": "string"
                  },
                  "type": {
                    "description": "type of the resource",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/catalogs/{id}": {
      "get": {
        "summary": "Get Data space Connector catalog",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "catalog id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "put": {
        "summary": "Get Data space Connector catalog",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "catalog id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "enable or disable the catalog line",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/": {
      "get": {
        "summary": "get the configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration": {
      "put": {
        "summary": "update configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "description": "endpoint of the data space connector",
                    "type": "string"
                  },
                  "serviceKey": {
                    "description": "service key of the participant provided by the catalog",
                    "type": "string"
                  },
                  "secretKey": {
                    "description": "secret key of the participant provided by the catalog",
                    "type": "string"
                  },
                  "catalogUri": {
                    "description": "endpoint of the catalog",
                    "type": "string"
                  },
                  "contractUri": {
                    "description": "endpoint of the contract manager",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "delete": {
        "summary": "delete configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/consent": {
      "put": {
        "summary": "update consent configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "description": "Base64 RSA public key",
                    "type": "string"
                  },
                  "uri": {
                    "description": "consent manager uri",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/reload": {
      "post": {
        "summary": "reload the configuration from config.json file",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/": {
      "post": {
        "summary": "Give consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "triggerDataExchange",
            "description": "trigger the data exchange in the same time than the consent.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "example": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privacyNoticeId": {
                    "required": true,
                    "description": "privacy notice id",
                    "type": "string",
                    "example": "65d747917cd550689dd06c29"
                  },
                  "userId": {
                    "required": true,
                    "description": "internal user id",
                    "type": "string",
                    "example": "65d7405e317a3078d12025f6"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/exchanges/{as}": {
      "get": {
        "summary": "Get available exchanges",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "as",
            "description": "as provider or consumer.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "provider"
          },
          {
            "name": "userId",
            "description": "internal id.",
            "in": "query",
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/me": {
      "get": {
        "summary": "Get user consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "internal user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/me/{id}": {
      "get": {
        "summary": "Get user consent by id",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "consent id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d747917cd550689dd06c29"
          },
          {
            "name": "userId",
            "description": "internal user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/privacy-notices/{privacyNoticeId}": {
      "get": {
        "summary": "Get user privacy notices",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "privacyNoticeId",
            "description": "privacy notice id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d747917cd550689dd06c29"
          },
          {
            "name": "userId",
            "description": "internal id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{consentId}/data-exchange": {
      "post": {
        "summary": "Trigger the data exchange by the user based on a consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consentId",
            "description": "consent id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d747917cd550689dd06c29"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "required": true,
                    "description": "internal user id",
                    "type": "string",
                    "example": "65d7405e317a3078d12025f6"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/participants/{userId}": {
      "get": {
        "summary": "Get user consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "internal user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/participants/{userId}/{id}": {
      "get": {
        "summary": "Get user consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "internal user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          },
          {
            "name": "id",
            "description": "consent id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d747917cd550689dd06c29"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/{providerSd}/{consumerSd}": {
      "get": {
        "summary": "Get user privacy notices",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "providerSd",
            "description": "provider self-description in base64.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "aHR0cDovL2hvc3QuZG9ja2VyLmludGVybmFsOjQwNDAvdjEvY2F0YWxvZy9wYXJ0aWNpcGFudHMvNjU2NGFiYjVkODUzZThlMDViMTMyMDU3"
          },
          {
            "name": "consumerSd",
            "description": "consumer self-description in base64.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "aHR0cDovL2hvc3QuZG9ja2VyLmludGVybmFsOjQwNDAvdjEvY2F0YWxvZy9wYXJ0aWNpcGFudHMvNjU2NGFhZWJkODUzZThlMDViMTMxN2Mx"
          },
          {
            "name": "userId",
            "description": "internal user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65d7405e317a3078d12025f6"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/credentials/{id}": {
      "put": {
        "summary": "update credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "basic or api-header",
                    "type": "string"
                  },
                  "key": {
                    "description": "username or key",
                    "type": "string"
                  },
                  "value": {
                    "description": "password or key value",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "get": {
        "summary": "get credential by id",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/credentials": {
      "get": {
        "summary": "get credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "create credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "basic or api-header",
                    "type": "string"
                  },
                  "key": {
                    "description": "username or key",
                    "type": "string"
                  },
                  "value": {
                    "description": "password or key value",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users": {
      "post": {
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "john@doe.com"
                  },
                  "internalID": {
                    "description": "User internal id",
                    "type": "string",
                    "example": "65b0e6d4150461011a10a23f"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/": {
      "get": {
        "summary": "Get Users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/{id}": {
      "get": {
        "summary": "Get a user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65b0e6d4150461011a10a23f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "put": {
        "summary": "Update a user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "user id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "john@doe.com"
                  },
                  "internalID": {
                    "description": "User internal id",
                    "type": "string",
                    "example": "65b0e6d4150461011a10a23f"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "user id.",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "65b0e6d4150461011a10a23f"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/import": {
      "post": {
        "summary": "Import users with a csv file",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Error response"
          },
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "base64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login to use private routes",
        "tags": [
          "Authentication"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secretKey": {
                    "description": "PTX secret Key",
                    "type": "string",
                    "example": "ay_HiowSg_mVU1rQeZEyB31Clq3HUchXmhXclfrJih5HVQk2ueZEgDMiswvIZZNOGcXhO7pNVriv9nopcadWwDgEGy9Bt7f4TAsO"
                  },
                  "serviceKey": {
                    "description": "PTX service Key",
                    "type": "string",
                    "example": "1tATiK7E3A1H3d_wIiUXOtLCKkWZZKA_p2X0gwkDmFxpfCF4I3IslrdmkPD_38aTTrAzIQULixUWcBIlBFyBcyU8sxDRUZMX_OTc"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/consent/export": {
      "post": {
        "summary": "export consent",
        "tags": [
          "Consent"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  },
                  "encrypted": {
                    "description": "encrypted key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/consent/import": {
      "post": {
        "summary": "import consent",
        "tags": [
          "Consent"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  },
                  "dataProviderEndpoint": {
                    "description": "export url",
                    "type": "string"
                  },
                  "encrypted": {
                    "description": "AES key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/consumer/exchange": {
      "post": {
        "summary": "Trigger data exchange between two connector",
        "tags": [
          "Consumer"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "200": {
              "description": "Successful response"
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "providerEndpoint": {
                    "description": "Endpoint url of the connector who need to exchange data",
                    "type": "string"
                  },
                  "contract": {
                    "description": "Contract self-description",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consumer/import": {
      "post": {
        "summary": "Endpoint to import data",
        "tags": [
          "Consumer"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "200": {
              "description": "Successful response"
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataExchangeId": {
                    "description": "data exchange id",
                    "type": "string"
                  },
                  "data": {
                    "description": "data",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/export": {
      "post": {
        "summary": "export data",
        "tags": [
          "Data"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/data/import": {
      "post": {
        "summary": "import data",
        "tags": [
          "Data"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  },
                  "user": {
                    "description": "user",
                    "type": "string"
                  },
                  "data": {
                    "description": "data",
                    "type": "string"
                  },
                  "encrypted": {
                    "description": "AES key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/dataexchanges/": {
      "get": {
        "summary": "Get all data exchange",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/dataexchanges/{id}": {
      "get": {
        "summary": "Get data exchange by id",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "data exchange id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "put": {
        "summary": "update data exchange",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "data exchange id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "consumerEndpoint": {
                    "description": "consumer endpoint where the data have been imported"
                  },
                  "payload": {
                    "description": "payload",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/dataexchanges/{id}/error": {
      "put": {
        "summary": "Get Data space Connector Self Description",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "data exchange id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "origin": {
                    "description": "origin of the update",
                    "type": "string"
                  },
                  "payload": {
                    "description": "information about the error",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/dataexchanges/{id}/success": {
      "put": {
        "summary": "Get Data space Connector Self Description",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "origin": {
                    "description": "origin of the update",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Get Data space Connector Self Description",
        "tags": [
          "Self-Description"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/provider/export": {
      "post": {
        "summary": "Provider exchange webhook",
        "tags": [
          "Provider"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataExchangeId": {
                    "description": "data exchange id",
                    "type": "string"
                  },
                  "consumerEndpoint": {
                    "description": "Consumer self-description",
                    "type": "string"
                  },
                  "contract": {
                    "description": "contract self-description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/users/template": {
      "post": {
        "summary": "Get the default csv file",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Catalog": {
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "The endpoint in the catalog.",
            "example": "https://test.com/dataresources/1"
          },
          "resourceId": {
            "type": "string",
            "description": "id from the catalog.",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "dataresource or softwareresource or serviceoffering.",
            "example": "resourceId"
          },
          "enabled": {
            "type": "boolean",
            "description": "if the resource is accessible in the self-description.",
            "example": true
          }
        }
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "appKey": {
            "type": "string",
            "description": "The appkey of the dataspace connector.",
            "example": "e6bbb3d733dc083b9d19dae8ed1bb31673379838fef6b88faa309b628f8b6124f2f306978200a90711b72e9d07b3e1d1d211fd219b2ce3ab5269a45fab009038"
          },
          "catalogUri": {
            "type": "string",
            "description": "The uri of the catalog.",
            "example": "https://catalog.api.com/v1/"
          },
          "contractUri": {
            "type": "string",
            "description": "The uri of the contract.",
            "example": "https://contract.api.com/v1/"
          },
          "consentUri": {
            "type": "string",
            "description": "The uri of the consent updated by the consent.",
            "example": "https://consent.api.com/v1/"
          },
          "endpoint": {
            "type": "string",
            "description": "endpoint of the dataspace connector.",
            "example": "https://connector.com/"
          },
          "secretKey": {
            "type": "string",
            "description": "your secretKey from the catalog.",
            "example": "hmP5WG7vBFsj1fxNYWyzzO7zgczCB"
          },
          "serviceKey": {
            "type": "string",
            "description": "your secretKey from the catalog.",
            "example": "Gr31PY4J2SRCPdqS5eaGQPE"
          }
        }
      },
      "Credential": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "the Key in the header.",
            "example": "Authorization"
          },
          "value": {
            "type": "string",
            "description": "the value of the key.",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "type": {
            "type": "string",
            "description": "type of the credential, only apiKey supported.",
            "example": "apiKey"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "internalID": {
            "type": "string",
            "description": "your internal id inside your app / database for the user.",
            "example": "65646d-4320-ec42-ff2e719706"
          },
          "email": {
            "type": "string",
            "description": "email of the user in your app / database.",
            "example": "john@doe.com"
          },
          "userIdentifier": {
            "type": "string",
            "description": "identifier provided by the consent.",
            "example": "65b0e6d4150461011a10a23f"
          }
        }
      },
      "Dataexchange": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "the self-description of the contract on which the exchange is based.",
            "example": "https://contract.api.com/contracts/65ae67ec930f0049cf8e7144"
          },
          "providerEndpoint": {
            "type": "string",
            "description": "provider data space connector endpoint.",
            "example": "http://provider.connector.com/"
          },
          "purposeId": {
            "type": "string",
            "description": "purpose of the exchange, the service offering who consume the data.",
            "example": "http://catalog.api.com/v1/catalog/serviceoffering/65afd2042791f143d1dd66d6"
          },
          "resourceId": {
            "type": "string",
            "description": "resource of the exchange, the service offering where the data come from.",
            "example": "http://catalog.api.com/v1/catalog/serviceoffering/65ae6d45e955ab17198da374"
          },
          "status": {
            "type": "string",
            "description": "status of the exchange.",
            "example": "PENDING"
          },
          "createdAt": {
            "type": "string",
            "description": "timestamp.",
            "example": "2024-01-23T15:46:01.378Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "timestamp.",
            "example": "2024-01-23T15:46:01.378Z"
          }
        }
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Catalogs",
      "description": "Catalogs of a data space connector"
    },
    {
      "name": "Configuration",
      "description": "Configuration routes"
    },
    {
      "name": "Consent",
      "description": "Private routes for the consent"
    },
    {
      "name": "Credentials",
      "description": "Credentials routes"
    },
    {
      "name": "Users",
      "description": "Catalogs of a data space connector"
    },
    {
      "name": "Authentication",
      "description": "Authentication to access private routes"
    },
    {
      "name": "Consumer",
      "description": "Consumer webhooks"
    },
    {
      "name": "Data",
      "description": "Data routes"
    },
    {
      "name": "Data-Exchange",
      "description": "Data Exchange webhooks and routes"
    },
    {
      "name": "Self-Description",
      "description": "Self Description of a data space connector"
    },
    {
      "name": "Provider",
      "description": "Provider webhook"
    }
  ]
}